name: Add Terraform Plan
on:
  workflow_call:
    inputs:
      WORK_DIR:
        required: false
        type: string
        default: ./
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_DEFAULT_REGION:
        required: true
      AWS_ASSUMED_ROLE:
        required: true

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ secrets.AWS_ASSUMED_ROLE }}
          role-duration-seconds: 900
          role-skip-session-tagging: true

      - name: Checkout Codebase
        uses: actions/checkout@v3.1.0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2
        with:
          terraform_version: 1.3.1

      - name: Initialize Terraform
        run: terraform init -input=false -backend=false

      - name: Run Terraform Plan
        run: |
          terraform -chdir=${{ inputs.WORK_DIR }} plan -input=false -out plan.out
          terraform -chdir=${{ inputs.WORK_DIR }} show -no-color plan.out > ${{ inputs.WORK_DIR }}plan.txt

      - name: Comment on PR
        uses: actions/github-script@v6.3.3
        with:
          script: |
            const fs = require('fs');
            const output = `
            #### Terraform Plan
            <details><summary>Show Plan</summary>

            \`\`\`
            ${fs.readFileSync('${{inputs.WORK_DIR}}/plan.txt')}
            \`\`\`

            </details>`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
